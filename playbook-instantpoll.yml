---
- hosts: instantpoll
  vars:
    ansible_python_interpreter: /usr/bin/python3
    # see https://docs.ansible.com/ansible/latest/user_guide/become.html#risks-of-becoming-an-unprivileged-user
    ansible_common_remote_group: "{{pac}}"
    ansible_remote_tmp: ~/.ansible/tmp
    virtualenv_dir: "/home/pacs/{{pac}}/users/{{user}}/instantpoll/.venv"

  tasks:
  - name: Create user, domain and database
    import_tasks: tasks/hs_basis.yml

  #################################
  ## create directories
  #################################
  - name: create directory etc
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc"
      state: directory
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory

  ##################################
  ## install InstantPoll
  ##################################
  - name: Check for git working tree
    become: yes
    become_user: "{{pac}}-{{user}}"
    stat:
      path: /home/pacs/{{pac}}/users/{{user}}/instantpoll
    register: workingtree
  - name: get instantpoll repo
    become: yes
    become_user: "{{pac}}-{{user}}"
    git:
      repo: https://github.com/ICCM-EU/InstantPoll.git
      dest: /home/pacs/{{pac}}/users/{{user}}/instantpoll
    when: not workingtree.stat.exists
  - name: make sure we require psycopg2 for postgresql
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/instantpoll/requirements.txt
      regexp: 'psycopg2'
      line: psycopg2
  - name: make sure we require uvicorn for web sockets
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/instantpoll/requirements.txt
      regexp: 'uvicorn\[standard\]'
      line: uvicorn[standard]
  - name: make sure we require gunicorn
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: /home/pacs/{{pac}}/users/{{user}}/instantpoll/requirements.txt
      regexp: 'gunicorn'
      line: gunicorn

  ##################################
  ## configuration
  ##################################
  - name: upload configuration file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/settings_local.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/instantpoll/instantpoll/settings_local.py"

  - name: upload gunicorn.conf.py file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/gunicorn.conf.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/etc/gunicorn.conf.py"

  - name: upload gunicorn start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/start_gunicorn.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/start_gunicorn.sh"
      mode: '0744'

  - name: upload restart script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/restart.sh"
      dest: "/home/pacs/{{pac}}/users/{{user}}/bin/restart.sh"
      mode: '0744'

  - name: Initiate virtualenv and install packages and install database with superuser
    become: yes
    become_user: "{{pac}}-{{user}}"
    make:
      chdir: /home/pacs/{{pac}}/users/{{user}}/instantpoll
      target: quickstart

  - name: collect static contents
    become: yes
    become_user: "{{pac}}-{{user}}"
    make:
      chdir: /home/pacs/{{pac}}/users/{{user}}/instantpoll
      target: collectstatic

  - name: upload redis configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/redis.conf" src="templates/redis.conf" mode=0600

  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600

  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600

  ########################
  ## setup the apache site
  ########################
  - name: drop htdocs-ssl/.htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
       path: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess"
       state: absent
  - name: create symbolic link for static
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/instantpoll/static"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/static"
      state: link
  - name: upload .htaccess file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/htaccess"
      #dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/.htaccess"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess"
  - name: upload passenger wsgi file
    become: yes
    become_user: "{{pac}}-{{user}}"
    template:
      src: "templates/passenger_wsgi.py"
      dest: "/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/app-ssl/passenger_wsgi.py"

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/monit.id && /usr/bin/monit -c "$HOME/.monitrc"
  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "27"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"

  ##############################################
  ## start the redis service via monit
  ##############################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"
